# -*- coding: utf-8 -*-
"""streamlit_code

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lL2gqrEhqEkZXKDap4XQNs8a8yTYkGV9
"""



import pickle
import streamlit as st

# Load the trained model
with open('random_forest_model.pkl', 'rb') as model_file:
    loaded_model = pickle.load(model_file)

feature_names = ['age', 'height(cm)', 'weight(kg)', 'waist(cm)', 'systolic',
                 'relaxation', 'fasting blood sugar', 'Cholesterol', 'triglyceride',
                 'HDL', 'LDL', 'hemoglobin', 'serum creatinine', 'AST', 'ALT', 'Gtp',
                 'dental caries']

def predict_smoking(features, feature_names):
    """Predict smoking based on input features."""
    
    try:
        # Prepare input data for prediction
        input_data = [float(features[feature]) for feature in feature_names]
        
        # Make prediction
        prediction = loaded_model.predict([input_data])
        
        return "Yes" if prediction[0] == 1 else "No"
    except ValueError:
        return "Invalid input. Please enter valid numeric values for all features."


def main():
    st.title("Smoking Prediction")

    

    # Create a dictionary to store user inputs for features
    user_inputs = {}

    # Add user input elements for various features
    for feature_name in feature_names:
        user_inputs[feature_name] = st.text_input(f"{feature_name.capitalize()}", f"Enter {feature_name}")

    # Make a prediction when the user clicks the "Predict" button
    if st.button("Predict"):
        result = predict_smoking(user_inputs)
        st.success(f"Prediction: {result}")

if __name__ == '__main__':
    main()

import streamlit as st
import pickle


from PIL import Image
import sklearn
import joblib

# Check the version of Streamlit
print(f"Streamlit version: {st.__version__}")

# Check the version of PIL (Pillow)
pillow_version = Image.__version__
print(f"Pillow version: {pillow_version}")

# Check the version of scikit-learn
sklearn_version = sklearn.__version__
print(f"scikit-learn version: {sklearn_version}")


import matplotlib.pyplot as plt
import matplotlib

# Get the version of Matplotlib
matplotlib_version = matplotlib.__version__

# Print the Matplotlib version
print(f"matplotlib version: {matplotlib_version}")

import seaborn as sns

# Get the version of Seaborn
seaborn_version = sns.__version__

# Print the Seaborn version
print(f"seaborn version: {seaborn_version}")

# Check the version of joblib
joblib_version = joblib.__version__
print(f"joblib version: {joblib_version}")
